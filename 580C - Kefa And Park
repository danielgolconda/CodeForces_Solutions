#include <iostream>
#include <bits/stdc++.h>
#define lld long long int
using namespace std;
const int MAXN=1e5+5;
vector <int> adj[MAXN];
vector <int> vis(MAXN);
vector <int> v;
int k;
vector <int> leaf(MAXN);
void dfs(int s,int pr,int c)
{
    int flag=0;
    if(c > k)
    {
        return ;
    }
    for(int u:adj[s])
    {
        if(!vis[u])
        {
        if(u != pr)
        {
            flag=1;
            if(v[u])
            {
             
                dfs(u,s,c+1);
            }
            else
            {
                dfs(u,s,0);
            }
        }
        }
        else
        {
            continue;
        }
    }
    if(flag)
    {
        leaf[s]=0;
    }
    else
    {
        leaf[s]=1;
    }
    
}
int main() 
{
    int n;
    cin >> n >> k;
    v.resize(n+1);
    v[0]=0;
    for(int i=1;i<=n;i++)
    {
        cin >> v[i];
    }
    for(int i=0;i<n-1;i++)
    {
        int x,y;
        cin >> x >> y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    fill(vis.begin(),vis.end(),0);
    fill(leaf.begin(),leaf.end(),0);
            dfs(1,-1,v[1]);
    int ans=0;
    for(int i=1;i<=n;i++)
    {
        ans+=leaf[i];
    }
    cout<<ans<<endl;
	return 0;
}
